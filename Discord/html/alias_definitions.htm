<!DOCTYPE html>
<HTML i18n-values="dir:textdirection;" id="uber" class dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Alias definitions</title>
 <!-- <link rel="stylesheet" href="css/chrome_shared.css" type="text/css" /> -->
<style type="text/css">
@import url(alias_definitions.css);
</style>
<link href="css/common.css" rel="stylesheet" type="text/css" />
<script src="js/cr.js" type="text/javascript"></script>
<script src="js/cr/event_target.js" type="text/javascript"></script>
<script src="js/cr/ui.js" type="text/javascript"></script>
<script src="js/cr/ui/array_data_model.js" type="text/javascript"></script>
<script src="js/cr/ui/list_selection_model.js" type="text/javascript"></script>
<script src="js/cr/ui/list_selection_controller.js" type="text/javascript"></script>
<script src="js/cr/ui/list_single_selection_model.js" type="text/javascript"></script>
<script src="js/cr/ui/list_item.js" type="text/javascript"></script>
<script src="js/cr/ui/list.js" type="text/javascript"></script>
<script src="js/cr/ui/focus_manager.js" type="text/javascript"></script>
<script src="js/util.js" type="text/javascript"></script>
<script src="deletable_item_list.js" type="text/javascript"></script>
<script src="alias_definitions.js" type="text/javascript"></script>
<script type="text/javascript">
<!--//Kent@FlashPeak
var AliasDefinitionList = options.AliasDefinitionList;
var aliasDefinitionList;
var is_dblclick_alias_list;
var alias_sorted_direction = 'asc';
var url_sorted_direction = 'desc';
function getByID(elem_id) {
  return $(elem_id);
}
function getResText(res_id) {
  var res_elem = getByID(res_id);
  if (res_elem != undefined) {
    return res_elem.innerText;
  }
}
function lzAlert(text_res_id) {
  alert(getResText(text_res_id));
}
function lzConfirm(text_res_id) {
  return confirm(getResText(text_res_id));
}

function viewHelpOnline(help_name) {
  document.location.href="sjcmd://viewhelp " + help_name;
}
function validateInput() {
  if ($('alias-text').value == "") {
    lzAlert('RES_INVALID_ALIAS');
    return false;
  }
  if ($('full-text').value == "") {
    lzAlert('RES_INVALID_URL');
    return false;
  }
  return true;
}
function compareAliasInfo(alias1, alias2) {
  if (alias1.displayText > alias2.displayText) {
    return 1;
  } else if (alias1.displayText == alias2.displayText) {
    return 0;
  } else {
    return -1;
  }
}
function existAlias(alias) {
  alias = alias.toLowerCase();
  alias = alias.trim();
  for (var i=0; i< aliasDefinitionList.dataModel.length; i++) {
    if ( aliasDefinitionList.dataModel.item(i).displayText == alias) {
      return i;
    }
  }
  return -1;
}
function insertItem(alias, full_text) {
  var i;
  alias = alias.toLowerCase();
  alias = alias.trim();
  full_text = full_text.trim();

  if (existAlias(alias) != -1) {
    lzAlert('RES_ITEM_ALREADY_EXISTS');
    return false;
  }

  var alias_info = {
    'displayText': alias,
    'displayUrl': full_text
  };
  aliasDefinitionList.dataModel.push(alias_info);
  aliasDefinitionList.selectionModel.unselectAll();
  for (i=0; i< aliasDefinitionList.dataModel.length; i++) {
    if ( aliasDefinitionList.dataModel.item(i).displayText == alias) {
      aliasDefinitionList.selectionModel.setIndexSelected(i,true);
      break;
    }
  }
  return true;
}
function handleClickAliasList_(e) {
  is_dblclick_alias_list = false;
  setTimeout(checkIsDblClickAliasList_, 100);
  function checkIsDblClickAliasList_() {
    if (is_dblclick_alias_list) {
      return;
    }
    handleClickAliasList();
  }
}
function handleClickAliasList() {
  if (aliasDefinitionList.selectionModel.selectedIndexes.length == 0) {
    return;
  }
  var index = aliasDefinitionList.selectionModel.selectedIndexes[0];
  var alias_info = aliasDefinitionList.dataModel.item(index);
  $('alias-text').value = alias_info.displayText;
  $('full-text').value = alias_info.displayUrl;
}
function clearInput() {
  $('alias-text').value = "";
  $('full-text').value = "";
}
function setAliasItem(index, alias, full_text) {
  var alias_info = {
    'displayText': alias,
    'displayUrl': full_text
  };
  aliasDefinitionList.dataModel.splice(index,1,alias_info);
}
function handleClose() {
  close();
}
function handleViewHelp() {
  viewHelpOnline("alias");
}
function handleAdd() {
  if (!validateInput()) return;
  var alias = $('alias-text').value;
  var full_text = $('full-text').value;
  if (insertItem(alias, full_text)) {
    clearInput();
    handleSave();
  }
}
function handleRemove() {
  var selected_items = aliasDefinitionList.selectionModel.selectedIndexes;
  for ( var i=selected_items.length-1; i>=0; i--) {
    var index = selected_items[i];
    aliasDefinitionList.dataModel.splice(index,1);
  }
  clearInput();
  handleSave();
}
function handleChange() {
  if (aliasDefinitionList.selectionModel.selectedIndexes.length == 0) {
     lzAlert('RES_PLEASE_SELECT_ITEM');
     return;
  }
  if (!validateInput()) {
     return;
  }
  var alias = $('alias-text').value;
  var full_text = $('full-text').value;

  var index = aliasDefinitionList.selectionModel.selectedIndexes[0];
  var exist_index = existAlias(alias);
  if (exist_index != -1 && exist_index != index) {
    lzAlert('RES_ITEM_ALREADY_EXISTS');
    return false;
  }

  alias = alias.toLowerCase();
  alias = alias.trim();
  full_text = full_text.trim();


  setAliasItem(index, alias, full_text);
  clearInput();
  handleSave();
}
function handleSave() {
  var i;
  var alias = [];
  var full_text = [];
  for (i = 0; i<aliasDefinitionList.dataModel.length; i++) {
    var alias_info = aliasDefinitionList.dataModel.item(i);
    alias.push(alias_info.displayText);
    full_text.push(alias_info.displayUrl);
  }
  var alias_url_list = alias.join('%09') + '\v' + full_text.join('%09');
  if (i == 0) {
    alias_url_list = '';
  }
  location = 'sjcmd://SaveAliasDefinitions(' + alias_url_list + ')';
}
function handleSuggestAlias() {
  var full_text = $('full-text').value;
  location = 'sjcmd://SuggestAlias(' + full_text + ')';
}
function cbSuggestAlias(suggested_alias) {
  $('alias-text').value = suggested_alias;
}
function handleClickdOpenSavedForm() {
  location = 'sjcmd://OpenSavedForm()';
}

function handleClickdOpenGroupBookmark() {
  location = 'sjcmd://OpenGroupBookmark()';
}

function cbOpenSavedForm(saved_form) {
  $('full-text').value = 'openform ' + saved_form;
}

function cbOpenGroupBookmark(bookmark_path) {
	if(bookmark_path == '')
	{
	  $('full-text').value = '';
	}
	else
	{
	  $('full-text').value = 'opengroup ' + bookmark_path;
	}
}

function handleDblClickedAliasList() {
  is_dblclick_alias_list = true;

  if (aliasDefinitionList.selectionModel.selectedIndexes.length == 0) {
    return;
  }
  var index = aliasDefinitionList.selectionModel.selectedIndexes[0];
  var alias_info = aliasDefinitionList.dataModel.item(index);
  location = 'sjcmd://OpenSite(' + alias_info.displayUrl + ')';
}
function handleSelectAliasList() {
  return false;
}
function cbDblClickedAliasList() {
  handleSave();
}
function handleSortByAlias() {
  var sort_direction = alias_sorted_direction == 'desc'?'asc':'desc';
  aliasDefinitionList.dataModel.sort('displayText',sort_direction);
  alias_sorted_direction = sort_direction;
  url_sorted_direction = 'desc';
}
function handleSortByUrl() {
  var sort_direction = url_sorted_direction == 'desc'?'asc':'desc';
  aliasDefinitionList.dataModel.sort('displayUrl',sort_direction);
  url_sorted_direction = sort_direction;
  alias_sorted_direction = 'desc';
}
function initDialog(aliases, urls) {
  aliasDefinitionList = $('alias-definitions-list');
  AliasDefinitionList.decorate(aliasDefinitionList);

  var alias_list = '';
  var url_list = '';

  if (aliases == '' || urls == '') {
    //empty list
  } else {
    if (aliases.indexOf('\t') != -1) {
      alias_list = aliases.split('\t');
    } else {
      alias_list = [aliases];
    }
    if (urls.indexOf('\t') != -1) {
      url_list = urls.split('\t');
    } else {
      url_list = [urls];
    }

  }
  

  var i = 0;
  var alias_info_list = [];
    if ( alias_list.length == url_list.length ) {
      for (var i = 0; i < alias_list.length; i++) {
        var alias_info = {
          'displayText': alias_list[i],
          'displayUrl': url_list[i]
        };
        alias_info_list.push(alias_info);
      }
    }

  delete aliasDefinitionList.dataModel;
  aliasDefinitionList.autoExpands = true;
  aliasDefinitionList.dataModel = new cr.ui.ArrayDataModel(alias_info_list);
  aliasDefinitionList.dataModel.createSortStatus('displayText','asc');

  $('alias-definitions-list').addEventListener('dblclick', handleDblClickedAliasList);
  $('alias-definitions-list').addEventListener('click', handleClickAliasList_);
  $('suggest-alias-button').addEventListener('click', handleSuggestAlias);
  $('open-group-bookmark-button').addEventListener('click', handleClickdOpenGroupBookmark);
  $('add-button').addEventListener('click', handleAdd);
  $('remove-button').addEventListener('click', handleRemove);
  $('change-button').addEventListener('click', handleChange);
  $('help-button').addEventListener('click', handleViewHelp);
  $('close-button').addEventListener('click', handleClose);
}

document.onkeydown = function(e){
    if(!e) e = window.event;
    if((e.keyCode || e.which) == 13){
        getByID("close-button").click();
    }
}

//-->
</script>
</head>
<BODY>
<div id="slimjet_alias_definitions_dialog" style="width:580px;height:450px;">
  <table style="width: 100%; border: 0px;">
  <tr align="center">
    <td><div id="alias-list-container">
      <div id="alias-definitions-header">
        <div id="alias-column" class="listheader" onClick="handleSortByAlias()">Alias</div>
        <div id="alias-url-command" class="listheader" onClick="handleSortByUrl()">URL or command</div>
      </div>
      <div id="alias-frame">
      <list id="alias-definitions-list" role="list" tabindex="0" aria-activedescendant has-element-focus="hasElementFocus">
      </list>
      </div>
    </div></td>
  </tr>
  <tr>
    <td><label><span class="labeltext">Alias:</span><input id="alias-text" type="text" style="width:80px" /><button id="suggest-alias-button" style="margin-left:10px">
    Suggest alias</button></label></td>
  </tr>
  <tr>
    <td>
    <label><span class="labeltext">URL or command:</span><input id="full-text" type="text" style="width:400px" />
        <span style="float: right;margin: 0px;">
            <button id="open-group-bookmark-button" title="lz(Open all bookmarks in folder)" style="padding: 0px; width: 32px; height: 25px;">
                <img src="images/open_group.png" style="width: 16px; height: 16px; margin-top:3px" />
            </button>
        </span>
    </label>
  </td>
  </tr>
  <tr align="left">
    <td>
      <table style="width: 100%">
        <tr>
          <td>
            <button style="width: 100%" id="add-button" class="inputbutton">Add</button>
          </td>
          <td>
            <button style="width: 100%" id="remove-button" class="inputbutton">Remove</button>
          </td>
          <td>
            <button style="width: 100%" id="change-button" class="inputbutton">Change</button>
          </td>
          <td>
            <button style="width: 100%" id="help-button" class="inputbutton">Help</button>
          </td>
          <td>
            <button style="width: 100%" id="close-button" class="inputbutton">Close</button>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>

  <div id="slimjet_dialog_res" style="display:none">
    <span id="RES_INVALID_ALIAS">Invalid alias!</span>
    <span id="RES_INVALID_URL">Invalid URL!</span>
    <span id="RES_ITEM_ALREADY_EXISTS">Item already exists!</span>
    <span id="RES_PLEASE_SELECT_ITEM">Please select an item!</span>
  </div>
</div>

</BODY>
</HTML>
